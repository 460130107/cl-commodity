<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cl.commodity.mapper.base.BrandMapper" >
  <resultMap id="BaseResultMap" type="com.cl.commodity.model.base.Brand" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="english_name" property="englishName" jdbcType="VARCHAR" />
    <result column="website" property="website" jdbcType="VARCHAR" />
    <result column="pic_large" property="picLarge" jdbcType="VARCHAR" />
    <result column="pic_middle" property="picMiddle" jdbcType="VARCHAR" />
    <result column="pic_small" property="picSmall" jdbcType="VARCHAR" />
    <result column="letter" property="letter" jdbcType="CHAR" />
    <result column="sort_no" property="sortNo" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_person" property="updatePerson" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, english_name, website, pic_large, pic_middle, pic_small, letter, sort_no, 
    is_delete, create_person, create_date, update_person, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from c_brand
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from c_brand
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cl.commodity.model.base.Brand" >
    insert into c_brand (id, name, english_name, 
      website, pic_large, pic_middle, 
      pic_small, letter, sort_no, 
      is_delete, create_person, create_date, 
      update_person, update_date)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{englishName,jdbcType=VARCHAR}, 
      #{website,jdbcType=VARCHAR}, #{picLarge,jdbcType=VARCHAR}, #{picMiddle,jdbcType=VARCHAR}, 
      #{picSmall,jdbcType=VARCHAR}, #{letter,jdbcType=CHAR}, #{sortNo,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=BIT}, #{createPerson,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updatePerson,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cl.commodity.model.base.Brand" >
    insert into c_brand
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="englishName != null" >
        english_name,
      </if>
      <if test="website != null" >
        website,
      </if>
      <if test="picLarge != null" >
        pic_large,
      </if>
      <if test="picMiddle != null" >
        pic_middle,
      </if>
      <if test="picSmall != null" >
        pic_small,
      </if>
      <if test="letter != null" >
        letter,
      </if>
      <if test="sortNo != null" >
        sort_no,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="englishName != null" >
        #{englishName,jdbcType=VARCHAR},
      </if>
      <if test="website != null" >
        #{website,jdbcType=VARCHAR},
      </if>
      <if test="picLarge != null" >
        #{picLarge,jdbcType=VARCHAR},
      </if>
      <if test="picMiddle != null" >
        #{picMiddle,jdbcType=VARCHAR},
      </if>
      <if test="picSmall != null" >
        #{picSmall,jdbcType=VARCHAR},
      </if>
      <if test="letter != null" >
        #{letter,jdbcType=CHAR},
      </if>
      <if test="sortNo != null" >
        #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cl.commodity.model.base.Brand" >
    update c_brand
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="englishName != null" >
        english_name = #{englishName,jdbcType=VARCHAR},
      </if>
      <if test="website != null" >
        website = #{website,jdbcType=VARCHAR},
      </if>
      <if test="picLarge != null" >
        pic_large = #{picLarge,jdbcType=VARCHAR},
      </if>
      <if test="picMiddle != null" >
        pic_middle = #{picMiddle,jdbcType=VARCHAR},
      </if>
      <if test="picSmall != null" >
        pic_small = #{picSmall,jdbcType=VARCHAR},
      </if>
      <if test="letter != null" >
        letter = #{letter,jdbcType=CHAR},
      </if>
      <if test="sortNo != null" >
        sort_no = #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cl.commodity.model.base.Brand" >
    update c_brand
    set name = #{name,jdbcType=VARCHAR},
      english_name = #{englishName,jdbcType=VARCHAR},
      website = #{website,jdbcType=VARCHAR},
      pic_large = #{picLarge,jdbcType=VARCHAR},
      pic_middle = #{picMiddle,jdbcType=VARCHAR},
      pic_small = #{picSmall,jdbcType=VARCHAR},
      letter = #{letter,jdbcType=CHAR},
      sort_no = #{sortNo,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=BIT},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
<!-- 以上是为了节约开发时间，使用MyBatisGenerator生成的代码-->
<!-- 以下是针对不足功能，添加的代码  -->
  
    <sql id="where">
    	where b.is_delete=0
    	<if test="name!=null and name!=''">
    		and b.name like CONCAT(#{name},'%') 
    	</if>
    </sql>
    <sql id="orderby">
    	order by b.id desc 
    </sql>
    <select id="getBrandTotalBySearch" parameterType="com.cl.commodity.model.base.BrandSearchModel" resultType="java.lang.Integer">
    	select count(0) 
    	from c_brand b
    	<include refid="where"/>
    </select>
    <!-- 这个方法虽然没有显示的书写limit，但是也是分页的，利用的MyBatis的RowBounds -->
    <select id="getBrandListBySearch" parameterType="com.cl.commodity.model.base.BrandSearchModel" resultMap="BaseResultMap">
	    select 
	    <include refid="Base_Column_List" />
	    from c_brand b
        <include refid="where"/>
        <include refid="orderby"/>
    </select>
    <select id="isUsed" parameterType="java.lang.Integer" resultType="java.lang.Boolean">
    	select exists(select 1 from c_commodity c where c.brand_id=#{brandId} limit 1);
    </select>
    <select id="getBrandList" resultType="java.lang.Integer">
	    select 
	    <include refid="Base_Column_List" />
	    from c_brand b
	    where b.is_delete=0
    </select>    
</mapper>